[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hiro"
version = "0.1.0"
description = "Getting started with MCP stuff"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    { name = "Kyle Keefer", email = "kwkeefer@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "click>=8.1.0",
    "fastapi>=0.104.0",
    "fastmcp>=2.12.2",
    "httpx>=0.28.1",
    "jinja2>=3.1.0",
    "pre-commit>=4.3.0",
    "psycopg2-binary>=2.9.10",
    "pydantic-settings>=2.10.1",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.6",
    "sqlalchemy[asyncio]>=2.0.0",
    "uvicorn[standard]>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
]

[project.scripts]
hiro = "hiro.cli:main"

[project.urls]
Homepage = "https://github.com/kwkeefer/hiro"
Repository = "https://github.com/kwkeefer/hiro"
Issues = "https://github.com/kwkeefer/hiro/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/hiro"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "database: Tests that require a real database connection",
]

[tool.coverage.run]
source_pkgs = ["hiro"]
branch = true
parallel = true
omit = [
    "src/hiro/__init__.py",
]

[tool.coverage.paths]
hiro = ["src/hiro", "*/hiro/src/hiro"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
target-version = "py312"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.isort]
known-first-party = ["hiro"]

[tool.ruff.lint.per-file-ignores]
"tests/fixtures/factories.py" = ["ARG004"]  # Unused static method arguments
"tests/servers/ai_logging/conftest.py" = ["ARG001"]  # Fixtures need dependencies even if not directly used
"tests/servers/ai_logging/test_tools.py" = ["ARG002"]  # Test fixtures may not be directly used
"tests/utils/mcp_test_helpers.py" = ["ARG002"]  # Mock methods need matching signatures

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start permissive
check_untyped_defs = true      # But still check typed code
warn_redundant_casts = true    # Catch obvious issues
warn_unused_ignores = true     # Keep ignores clean
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Gradually enable stricter checks
[[tool.mypy.overrides]]
module = "hiro.core.*"
disallow_untyped_defs = true   # Strict for core modules

[[tool.mypy.overrides]]
module = "hiro.models.*"
disallow_untyped_defs = true   # Strict for data models

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "httpx>=0.28.1",
    "mypy>=1.17.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.12",
    "types-pyyaml>=6.0.12.20250822",
]
test = [
    "pytest-asyncio>=1.1.0",
]
